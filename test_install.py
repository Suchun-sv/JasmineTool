#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test script to verify JasmineTool installation
"""

import sys
import os

def test_import():
    """Test importing JasmineTool modules"""
    try:
        import jasminetool
        print(f"‚úì Successfully imported jasminetool (version: {jasminetool.__version__})")
        
        from jasminetool import UnifiedTaskRunner
        print("‚úì Successfully imported UnifiedTaskRunner")
        
        from jasminetool import LocalMode, RemoteMode, SlurmMode, RemoteGpuMode
        print("‚úì Successfully imported execution modes")
        
        from jasminetool import TmuxManager, ConfigManager
        print("‚úì Successfully imported utility classes")
        
        return True
    except ImportError as e:
        print(f"‚úó Import failed: {e}")
        return False

def test_cli():
    """Test CLI functionality"""
    try:
        from jasminetool.cli import create_parser
        parser = create_parser()
        print("‚úì Successfully created CLI parser")
        
        # Test help
        help_text = parser.format_help()
        if "jasminetool" in help_text:
            print("‚úì CLI help text contains expected content")
        else:
            print("‚úó CLI help text missing expected content")
            
        return True
    except Exception as e:
        print(f"‚úó CLI test failed: {e}")
        return False

def test_config():
    """Test configuration loading"""
    try:
        from jasminetool.utils import ConfigManager
        
        # Test with example config if it exists
        example_config = "examples/agent_config.yaml"
        if os.path.exists(example_config):
            config = ConfigManager.load_config(example_config)
            print(f"‚úì Successfully loaded example config with {len(config)} targets")
        else:
            print("‚ö† Example config not found, skipping config test")
            
        return True
    except Exception as e:
        print(f"‚úó Config test failed: {e}")
        return False

def main():
    """Run all tests"""
    print("Testing JasmineTool installation...")
    print("=" * 40)
    
    tests = [
        ("Import Test", test_import),
        ("CLI Test", test_cli),
        ("Config Test", test_config),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\n{test_name}:")
        if test_func():
            passed += 1
        else:
            print(f"  Failed: {test_name}")
    
    print("\n" + "=" * 40)
    print(f"Test Results: {passed}/{total} passed")
    
    if passed == total:
        print("üéâ All tests passed! JasmineTool is properly installed.")
        return 0
    else:
        print("‚ùå Some tests failed. Please check the installation.")
        return 1

if __name__ == "__main__":
    sys.exit(main()) 